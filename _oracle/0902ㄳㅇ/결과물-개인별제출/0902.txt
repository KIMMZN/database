
//// 0902
릴레이션(테이블), 튜플(row), 칼럼

hm릴레이션의 point column의  값이 50이하인 튜플의 count

hm릴레이션의 point column의 값이 50이하인 튜플을 모두 출력 ,point가 높은 순서대로

1. 집계함수, 정렬

/
****
*select : 화면에 출력할때 선택하는 속성.
from : 대상 테이블
*where : 튜플선정조건
order by : 정렬
****


ex)
create table hm(
no number(3) primary key,
name varchar2(10) not null,
point number(5) default 0,
addr varchar2(20),
indate timestamp default sysdate);

insert into hm values (1,'홍길동',45,'서울시',default);
insert into hm values (2,'일지매',50,'수원',default);
insert into hm values (3,'이지매',43,'서울',default);

hm릴레이션의 point column의 값이 50이하인 튜플을 모두 출력 ,point가 높은 순서대로

a : select *
b : from : hm
c : where : point <50
d : order by: point desc 오름차순
                     asc 내림차순

** 실행 순서는 b c a d 이다. 중요하니 알아두자.
해결할때도 실행순서대로 하자.



-함수 : 실행후 결과를 리턴해줌

/// 정리
1.테이블 관리 : create table. drop table, alter table
	     : 테이블(릴레이션), 속성(속성타입, 제약조건)
 	     :타입 - int, number*, varchar2, timestamp
	     :제약 조건 : 유일성(기본키, unique), not null, check, default
	     : 키 - 기본키 - 유일성, not null, 인덱스형성(검색속도 향상
					          -where 절에서 사용)
		외래키 - 컬럼 투 컬럼, 자식 릴레이션 컬림이 부모 릴레이션의 컬럼을 참조한다.
			외래키 제약조건 : cascase, set null
	     : ERD - 개체와 개체의 관계분석 1:1, 1:N, N:M 분석 후 테이블 형성

2. 테이블에 저장된 튜플의 조작
삽입 - insert]
갱신 - update : 특정 튜플을 선택하여 갱신하려면 where절 사용
삭제 - delete : 특정 튜플을 선택하여 삭제하려면 where절 사용
검색 - select :  각 절의 의미 암기, 절의 실행 순서 이해
*실행순수 / 절의 의미
      4      select절	: 컬럼선택
      1      from절	: 대상 테이블
      2      where절	: 대상 테이블로부터 튜플을 선정할 조건
      3      group by 절 :  그룹화
      5      order by 절 : 출력할때 정렬

3. 함수 : 함수를 호출하고 함수의 기능을 실행하고 결과값을 리턴,
	결과값을 리턴받아서 처리 한다... 예를 들어 count(*)함수를 호출하면 튜플의 수를
	카운팅하여 카운팅 결과값을 리턴한다.


예제))

create table hm(
no number(3) primary key,
name varchar2(10) not null,
point number(5) default 0,
addr varchar2(20),
indate timestamp default sysdate);

insert into hm values (1,'홍길동',45,'서울시',default);
insert into hm values (2,'일지매',50,'수원',default);
insert into hm values (3,'이지매',43,'서울',default);

select * from hm;
select no,name from hm order by no asc; --asc 내림차순
select count(*) from hm;

-- 1. 이름과 점수만.
-- name, point of hm
select name, point
from hm;

-- 2. 점수 50점 미만인 사람의 이름과 점수.
select name,point
from hm
where point<50;

--3.점수가 50점미만인 사람은 모두 몇명? COUNT
select count(*)
from hm
where point<50;

--4.홍길동의 점수는 몇점 인가?
select point, name
from hm
where name = '홍길동';

--5. 일지매의 모든 정보를 출력하세요.
select *
from hm
where name = '일지매';

select sum(point) as 총함 from hm;

select no, name 이름
from hm
where point <50;

-- 1. 모든학생의 이름과 포인트를 출력합니다.
-- 포인트는 현재 포인트에서 10점 올려서 출력

select name, point+10
from hm;



-- 2.모든 학생의 이름과 포인트를 출력
-- 출력은 이름 현재포인트 가산포인트
--이름은 학생의 이름
--현재포인트는 저장된 포인트
--가산포인트는 +10점 올린 포인트

select name as 이름, point as 현재포인트, point+10 as 가산포인트
from hm
order by point desc;

select * from hm;
update hm set point=100, name ='김티처';
update hm set point=100, name ='김티처' where name ='홍길동';
delete from hm;

--update hm set point=0, name ='홍길동' where name =' ';
delete from hm where name='홍길동';

select concat('이름','님') 이름 from dual;
select sysdate from dual;

--1
select concat(name,'님') 이름, point
from hm;

--2
select name, point, indate
from hm
order by indate desc;

--3
select name as 이름, concat(concat(no,name),point) as 정보 
from hm
where point >=50;

--4 
select point as 현재포인트, 60-point as 부족한포인트
from hm;




