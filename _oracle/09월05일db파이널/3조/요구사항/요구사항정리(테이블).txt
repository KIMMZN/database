

create table member(
id varchar(15) primary key,
password varchar(20) not null,
m_name varchar(20) not null,
m_tel varchar(13) not null,
m_level int(2) default 3 check (m_level in (1,2,3)),
m_perlevel float check (m_perlevel in (0.8,0.9,1.0))
);


create table room(
r_name varchar(6) primary key,
r_price decimal(10,1) check(r_price in(1, 1.2, 1.5)),
r_remain int(2) default 50
);


create table movie(
m_code int(3) primary key,
m_name varchar(100) unique,
m_genre varchar(10) not null,
m_time varchar(10) not null,
m_price int(10) not null
);

create table ticket(
t_code varchar(6) primary key,
id varchar(15),
m_name varchar(100),
s_time varchar(100),
r_name varchar(6),
t_number int(2),
t_date timestamp,
constraint fk_member_ticket foreign key(id) references member(id) on delete cascade,
constraint fk_movie__ticket foreign key(m_name) references movie(m_name) on delete cascade,
constraint fk_romm_ticket foreign key(r_name) references room(r_name)
);

create table review(
rv_id varchar(6) primary key,
id varchar(15),
m_name varchar(100),
r_title varchar(100) not null,
r_text varchar(100000) not null,
r_date timestamp not null,
r_rate int(2) check (r_rate between 0 and 10),
r_secret varchar(1) check(r_secret in('N','Y'),
constraint fk_member_review foreign key(id) references member(id) on delete cascade on update cascade,
constraint fk_movie__review foreign key(m_name) references movie(m_name)
);

create table comment(
c_code varchar(6) primary key,
id varchar(15),
rv_id varchar(6),
c_title varchar(100) not null,
c_text varchar(100000) not null,
constraint fk_member_comment foreign key(id) references member(id),
constraint fk_review_comment foreign key(rv_id) references review(rv_id)
);








ALTER table review modify column r_rate INT(2) check (r_rate between 0 and 10);

//외래키 설정
constraint fk_member_ticket foreign key(id) references member(id)

/* 외래키 추가 */
alter table c_order
add constraint fk_member_c_order
foreign key(id)
references member(id);

//date 1998-08-09

CREATE OR REPLACE TRIGGER trg_substractRoom
AFTER insert ON ticket

FOR EACH ROW

begin

declare c_remain int
set c_remain = r_remain - new.t_number
update room set 
end;