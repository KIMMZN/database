
회원 id검색시 주문내역

 select * from ticket where cid='banana';

 select * from ticket where cid='mango';
 select * from ticket where cid='cherry';

쿼리설명 
select문 : 원하는 열을 선택하여 출력한다.
 cid : 아이디


// 영화  주문 내역
SQL> select tcode, mname from ticket;

TCODE      MNAME
---------- --------------------
N0001      애프터썬
N0002      애프터썬
N0003      필사의추격
N0004      혹성탈출:새로운시대
N0005      빅토리
N0006      빅토리

// group by 활용 영화 판매 숫자 확인

select mname, count(*) as 판매숫자
from ticket
GROUP BY mname;

++
COUNT(*)는 행(row)의 개수를 세는 집계 함수입니다.
mname과 같이 집계되지 않은 열을 SELECT에 포함하려면, 해당 열이 그룹화의 기준으로 사용되어야 합니다.
즉, mname을 기준으로 그룹화하지 않으면 SQL은 어떤 기준으로 집계할지 알 수 없어서 오류가 발생합니다.

SQL> select mname, count(*) as 판매숫자
  2  from ticket
  3  GROUP BY mname;

MNAME                  판매숫자
-------------------- ----------
필사의추격                    1
애프터썬                      2
빅토리                        2
혹성탈출:새로운시대           1


//  영화들의 티켓 판매 숫자와 매출액 
movie
maname
mprice


select mname, count(*) as 판매숫자
from ticket
GROUP BY mname;


select a.mname, a.count(*) as 판매숫자, b.mprice
from ticket a, movie b
where a.mname = b.mname
GROUP BY mname;

SELECT a.mname, 
       COUNT(*) AS 판매숫자, 
       b.mprice, 
       COUNT(*) * b.mprice AS 총매출액
FROM ticket a, movie b
WHERE a.mname = b.mname
GROUP BY a.mname, b.mprice;


SQL> SELECT a.mname,
  2         COUNT(*) AS 판매숫자,
  3         b.mprice,
  4         COUNT(*) * b.mprice AS 총매출액
  5  FROM ticket a, movie b
  6  WHERE a.mname = b.mname
  7  GROUP BY a.mname, b.mprice;

MNAME                  판매숫자     MPRICE   총매출액
-------------------- ---------- ---------- ----------
혹성탈출:새로운시대           1      11000      11000
애프터썬                      2       7000      14000
빅토리                        2       8000      16000
필사의추격                    1       9000       9000


// 기능 : 영화별 댓글의 숫자

ticket cid , mnane, 
review cid, mname, detail
리뷰 테이블의 영화이름, 아이디, 후기내용, 후기작성날짜

cId varchar2(20) not null,
mName varchar2(20) not null,
rDate timestamp not null,
detail varchar2(1000),


간단한 설명을 추가하세요


select mname, count(*) as 댓글숫자
from review
group by mname;

select mname, cid, detail, rDate
from review
group by mname;








2번
//

**1. 쿼리의 목적
이 쿼리의 목표는 각 영화의 티켓이 몇 번 판매되었는지를 집계하는 것입니다.
결과를 통해 영화별 판매 성과를 쉽게 확인할 수 있으며, 영화의 인기도를 파악할 수 있습니다.
2. SQL 쿼리 설명
sql
코드 복사
SELECT mname, 
       COUNT(*) AS 판매숫자
FROM ticket
GROUP BY mname;
3. 쿼리의 구성 요소
SELECT mname, COUNT(*) AS 판매숫자:

mname: 영화 이름을 선택합니다.
COUNT(*): 각 영화의 판매된 티켓 수를 계산합니다. *는 모든 행을 대상으로 하는 것을 의미하며, COUNT(*)는 각 그룹(영화 이름) 내에서의 행 수를 셉니다.
AS 판매숫자: COUNT(*)의 결과에 별칭을 부여하여 출력 시 판매숫자라는 이름으로 표시되도록 합니다.
FROM ticket:

데이터를 조회할 테이블인 ticket을 지정합니다. 이 테이블에는 영화 제목, 고객 정보, 티켓 구매 정보 등이 저장되어 있습니다.


GROUP BY mname:

mname(영화 이름)을 기준으로 데이터를 그룹화합니다.
그룹화된 각 영화별로 COUNT(*)가 적용되어 영화별 티켓 판매 수를 집계합니다.




**3번 총판매액

2. 사용된 SQL 쿼리
sql
코드 복사
SELECT a.mname, 
       COUNT(*) AS 판매숫자, 
       b.mprice, 
       COUNT(*) * b.mprice AS 총매출액
FROM ticket a, movie b
WHERE a.mname = b.mname
GROUP BY a.mname, b.mprice;

3. 쿼리 설명
SELECT 문: 데이터베이스에서 원하는 열을 선택하여 출력합니다.

a.mname: 영화 제목을 선택합니다.
COUNT(*) AS 판매숫자: 각 영화의 판매된 티켓 수를 계산합니다.
b.mprice: 각 영화의 티켓 가격을 선택합니다.
COUNT(*) * b.mprice AS 총매출액: 판매된 티켓 수와 가격을 곱하여 총 매출액을 계산합니다.
FROM 절:

ticket a: 티켓 정보를 담고 있는 ticket 테이블을 a라는 별칭으로 사용합니다.
movie b: 영화 정보를 담고 있는 movie 테이블을 b라는 별칭으로 사용합니다.
WHERE 절:

a.mname = b.mname: 두 테이블을 영화 제목(mname)을 기준으로 연결(join)합니다.
GROUP BY 절:

a.mname, b.mprice: 영화 제목과 티켓 가격을 기준으로 데이터를 그룹화하여 각 영화의 판매 수량과 총 매출을 계산합니다.
